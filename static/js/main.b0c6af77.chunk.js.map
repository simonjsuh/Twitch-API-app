{"version":3,"sources":["components/ListOfTopGames.js","components/ListOfTopStreamers.js","components/ViewTopStreamsForGame.js","components/ViewStreamer.js","components/API.js","App.js","serviceWorker.js","index.js"],"names":["ListOfTopGames","props","detectWindowScrollToBottom","pointerToThis","window","onscroll","ev","innerHeight","scrollY","document","body","offsetHeight","fetchTopGames","state","cursor","previousCursor","topGamesData","queryAfter","fetch","method","headers","Headers","then","response","json","data","key","push","gameID","id","gameName","name","gameBoxArtURL","box_art_url","setState","topGames","pagination","this","topGamesList","console","log","href","src","replace","alt","React","Component","ListOfTopStreamers","topStreamsData","streamName","title","thumbnailURL","thumbnail_url","username","user_name","viewerCount","viewer_count","language","game_id","topStreams","topStreamsList","substring","ViewTopStreamsForGame","fetchStreamsForGame","getGameIDFromURL","urlParts","URL","split","gameTopStreamsData","gameTopStreams","gameTopStreamsList","ViewStreamer","getStreamerNameFromURL","partsOfURL","streamerName","length","frameborder","allowfullscreen","scrolling","height","width","API","to","path","exact","component","App","className","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0c6af77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ListOfTopGames extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topGames: [],\r\n      cursor: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTopGames();\r\n    this.detectWindowScrollToBottom();\r\n  }\r\n\r\n  detectWindowScrollToBottom = () => {\r\n    const pointerToThis = this;\r\n    window.onscroll = function(ev) {\r\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n          // alert(pointerToThis.state.cursor);\r\n          // console.log(document.body.offsetHeight);\r\n          pointerToThis.fetchTopGames(pointerToThis.state.cursor);\r\n\r\n          // pointerToThis.fetchTopGamesWithViewerCount();\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchTopGames = (previousCursor) => {\r\n    const pointerToThis = this;\r\n    let topGamesData = [];\r\n    var queryAfter = '';\r\n\r\n    if (previousCursor) {\r\n      queryAfter = `after=${previousCursor}`;\r\n    }\r\n\r\n    fetch(`https://api.twitch.tv/helix/games/top?${queryAfter}`, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Client-ID': 's75951wp1ziumbywfpu9hyv20iz5u7'\r\n      })\r\n    })\r\n      .then(\r\n        function(response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function(data) {\r\n          // console.log(data);\r\n\r\n          for (var key in data.data) {\r\n            topGamesData.push({\r\n              // key: key,\r\n              gameID: data.data[key].id,\r\n              gameName: data.data[key].name,\r\n              gameBoxArtURL: data.data[key].box_art_url\r\n            })\r\n          }\r\n\r\n          pointerToThis.setState({\r\n            topGames: [...pointerToThis.state.topGames, ...topGamesData],\r\n            cursor: data.pagination.cursor\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let topGamesList = [];\r\n    console.log(this.state.topGames)\r\n\r\n    for (var key in this.state.topGames) {\r\n      topGamesList.push(\r\n        <li key={key}>\r\n          <a href={\"/topStreamsForGame/gameID=\" + this.state.topGames[key].gameID}>\r\n            <img src={this.state.topGames[key].gameBoxArtURL.replace(\"{width}\", \"285\").replace(\"{height}\", \"380\")} alt=\"\"/>\r\n          </a><br />\r\n          {this.state.topGames[key].gameName}\r\n        </li>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>List of Top Games</h1>\r\n        <ul>\r\n          {topGamesList}\r\n        </ul>\r\n        <div id='clearBoth'></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListOfTopGames;","import React from 'react';\r\n// import $ from 'jquery';\r\n\r\nclass ListOfTopStreamers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topStreams: [],\r\n      cursor: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTopGames();\r\n    this.detectWindowScrollToBottom();\r\n  }\r\n\r\n  // checkCursorVariable = () => {\r\n  //   const pointerToThis = this;\r\n\r\n  //   if (pointerToThis.state.cursor != null) {\r\n  //     pointerToThis.fetchTopGames(pointerToThis.state.cursor);\r\n  //   } else {\r\n  //     window.setTimeout('checkCursorVariable();', 100);\r\n  //   }\r\n  // }\r\n\r\n  detectWindowScrollToBottom = () => {\r\n    const pointerToThis = this;\r\n\r\n    // check if scrollbar is visible. If so, detect scrollbar change to bottom. If scrollbar is not visible, load the next 20 streamers automatically.\r\n    // if (document.getElementById('listOfTopStreamers').scrollHeight > document.getElementById('listOfTopStreamers').offsetHeight) {\r\n    //   // this.checkCursorVariable();\r\n    //   pointerToThis.fetchTopGames(pointerToThis.state.cursor);\r\n    // } \r\n\r\n    window.onscroll = function() {\r\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n        // alert(pointerToThis.state.cursor);\r\n        // console.log(document.body.offsetHeight);\r\n        pointerToThis.fetchTopGames(pointerToThis.state.cursor);\r\n        // pointerToThis.fetchTopGamesWithViewerCount();\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchTopGames = (previousCursor) => {\r\n    const pointerToThis = this;\r\n    let topStreamsData = [];\r\n    var queryAfter = '';\r\n\r\n    if (previousCursor) {\r\n      queryAfter = `after=${previousCursor}`;\r\n    }\r\n\r\n    // console.log(queryAfter);\r\n\r\n    fetch(`https://api.twitch.tv/helix/streams?${queryAfter}`, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Client-ID': 's75951wp1ziumbywfpu9hyv20iz5u7'\r\n      })\r\n    })\r\n      .then(\r\n        function(response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function(data) {\r\n          console.log(data);\r\n\r\n          for (var key in data.data) {\r\n            topStreamsData.push({\r\n              // key: key,\r\n              streamName: data.data[key].title,\r\n              thumbnailURL: data.data[key].thumbnail_url,\r\n              username: data.data[key].user_name,\r\n              viewerCount: data.data[key].viewer_count,\r\n              language: data.data[key].language,\r\n              gameID: data.data[key].game_id\r\n            })\r\n          }\r\n\r\n          pointerToThis.setState({\r\n            topStreams: [...pointerToThis.state.topStreams, ...topStreamsData],\r\n            cursor: data.pagination.cursor\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let topStreamsList = [];\r\n\r\n    for (var key in this.state.topStreams) {\r\n      topStreamsList.push(\r\n        <li key={key}>\r\n          <a href={'view_streamer/' + this.state.topStreams[key].username}>\r\n            <img src={this.state.topStreams[key].thumbnailURL.replace(\"{width}\", \"320\").replace(\"{height}\", \"180\")} alt=\"\"/>\r\n          </a><br />\r\n          {this.state.topStreams[key].username.substring(0,30)}<br />\r\n          {this.state.topStreams[key].streamName.substring(0,30)}<br />\r\n          Viewers: {this.state.topStreams[key].viewerCount}\r\n        </li>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div id='listOfTopStreamers'>\r\n        <h1>List of Top Streamers</h1>\r\n        <ul>\r\n          {topStreamsList}\r\n        </ul>\r\n        <div id='clearBoth'></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListOfTopStreamers;","import React from 'react';\r\n\r\nclass ViewTopStreamsForGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gameID: '',\r\n      gameTopStreams: [],\r\n      cursor: null\r\n    }\r\n  }\r\n\r\n  detectWindowScrollToBottom = () => {\r\n    const pointerToThis = this;\r\n\r\n    window.onscroll = function(ev) {\r\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n        pointerToThis.fetchStreamsForGame(pointerToThis.state.cursor);\r\n        // console.log(document.body.offsetHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  getGameIDFromURL = () => {\r\n    let pointerToThis = this;\r\n    let url = document.URL;\r\n    let urlParts = url.split('=');\r\n    // alert(urlParts[1])\r\n\r\n    pointerToThis.state.gameID = urlParts[1];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getGameIDFromURL();\r\n    // alert(this.state.gameID);\r\n    this.fetchStreamsForGame();\r\n    this.detectWindowScrollToBottom();\r\n  }\r\n\r\n  fetchStreamsForGame = (previousCursor) => {\r\n    const pointerToThis = this;\r\n    let gameTopStreamsData = [];\r\n    var queryAfter = '';\r\n\r\n    if (previousCursor) {\r\n      queryAfter = `&after=${previousCursor}`;\r\n    }\r\n\r\n    fetch(`https://api.twitch.tv/helix/streams?game_id=${this.state.gameID}${queryAfter}`, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Client-ID': 's75951wp1ziumbywfpu9hyv20iz5u7'\r\n      })\r\n    })\r\n      .then(\r\n        function(response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function(data) {\r\n          console.log(data);\r\n          for (var key in data.data) {\r\n            gameTopStreamsData.push({\r\n              // key: key,\r\n              streamName: data.data[key].title,\r\n              thumbnailURL: data.data[key].thumbnail_url,\r\n              username: data.data[key].user_name,\r\n              viewerCount: data.data[key].viewer_count,\r\n              language: data.data[key].language,\r\n              gameID: data.data[key].game_id\r\n            })\r\n          }\r\n\r\n          pointerToThis.setState({\r\n            gameTopStreams: [...pointerToThis.state.gameTopStreams, ...gameTopStreamsData],\r\n            cursor: data.pagination.cursor\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let gameTopStreamsList = [];\r\n\r\n    // console.log(this.state.gameTopStreams);\r\n\r\n    for (var key in this.state.gameTopStreams) {\r\n      gameTopStreamsList.push(\r\n        <li key={key}>\r\n          <a href={'../view_streamer/' + this.state.gameTopStreams[key].username}>\r\n            <img src={this.state.gameTopStreams[key].thumbnailURL.replace(\"{width}\", \"320\").replace(\"{height}\", \"180\")} alt=\"\"/>\r\n          </a><br />\r\n          {this.state.gameTopStreams[key].username.substring(0,30)}<br />\r\n          {this.state.gameTopStreams[key].streamName.substring(0,30)}<br />\r\n          Viewers: {this.state.gameTopStreams[key].viewerCount}\r\n        </li>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div id='gameStreams'>\r\n        <h1>Top streams for game:</h1>\r\n        <ul>\r\n          {gameTopStreamsList}\r\n        </ul>\r\n        <div id='clearBoth'></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ViewTopStreamsForGame;","import React from 'react';\r\n\r\nclass ViewStreamer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      streamerName: ''\r\n    }\r\n  }\r\n\r\n  getStreamerNameFromURL = () => {\r\n    let pointerToThis = this;\r\n    const url = document.URL;\r\n    let partsOfURL = url.split('/');\r\n    let streamerName = partsOfURL[partsOfURL.length - 1];\r\n\r\n    pointerToThis.state.streamerName = streamerName;\r\n    console.log(pointerToThis.state.streamerName);\r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getStreamerNameFromURL();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='streamer'>\r\n        <h1>You are viewing {this.state.streamerName}'s stream</h1>\r\n          <div id=\"streameriFrame\">\r\n          <iframe src={\"https://player.twitch.tv/?channel=\" + this.state.streamerName} frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"500\" width=\"720\"></iframe>\r\n          <iframe src={\"https://www.twitch.tv/embed/\" + this.state.streamerName + \"/chat\"} frameborder=\"0\" scrolling=\"no\" height=\"500\" width=\"350\"></iframe>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ViewStreamer;","import React from 'react';\r\nimport ListOfTopGames from './ListOfTopGames';\r\nimport ListOfTopStreamers from './ListOfTopStreamers';\r\nimport ViewTopStreamsForGame from './ViewTopStreamsForGame';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport ViewStreamer from './ViewStreamer';\r\n\r\nclass API extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/listOfTopGames\">List of Top Games</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/listOfTopStreamers\">List of Top Streamers</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        \r\n        <Route path=\"/view_streamer/:id\" exact component={ViewStreamer} />\r\n        <Route path=\"/topStreamsForGame/:id\" exact component={ViewTopStreamsForGame} />\r\n        <Route path=\"/listOfTopGames\" component={ListOfTopGames} />\r\n        <Route path=\"/listOfTopStreamers\" exact component={ListOfTopStreamers} />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default API;","import React from 'react';\nimport API from './components/API';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <API></API>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}